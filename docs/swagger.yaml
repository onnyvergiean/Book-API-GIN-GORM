basePath: /
definitions:
  controllers.CreateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    required:
    - author
    - title
    type: object
  controllers.UpdateBookInput:
    properties:
      author:
        type: string
      title:
        type: string
    type: object
  models.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server book server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Book API
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get details of all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get details
      tags:
      - book
    post:
      consumes:
      - application/json
      description: Post details of a book corresponding to the given id
      parameters:
      - description: Create Book
        in: body
        name: models.Book
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Post a book for the given id
      tags:
      - book
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete details of a book corresponding to the given id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a book for the given id
      tags:
      - book
    get:
      consumes:
      - application/json
      description: Get details of a book corresponding to the given id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get details of a book fot the given id
      tags:
      - book
    put:
      consumes:
      - application/json
      description: Update details of a book corresponding to the given id
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Book
        in: body
        name: models.Book
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBookInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update details of a book for the given id
      tags:
      - book
swagger: "2.0"
